{"version":3,"file":"static/js/df-8.cb8d8b54.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","../node_modules/date-fns/esm/locale/be-tarask/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/be-tarask/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/be-tarask/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/be-tarask/_lib/localize/index.js","../node_modules/date-fns/esm/locale/be-tarask/index.js","../node_modules/date-fns/esm/locale/be-tarask/_lib/match/index.js"],"sourcesContent":["import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count)); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count)); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar halfAMinute = function halfAMinute(_, options) {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'праз паўхвіліны';\n    } else {\n      return 'паўхвіліны таму';\n    }\n  }\n\n  return 'паўхвіліны';\n};\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: halfAMinute,\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      // TODO\n      singularGenitive: 'каля {{count}} месяцаў',\n      // TODO\n      pluralGenitive: 'каля {{count}} месяцаў' // TODO\n\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      // TODO\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      // TODO\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў' // TODO\n\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\n\nvar formatDistance = function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\n\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: \"EEEE, d MMMM y 'г.'\",\n  long: \"d MMMM y 'г.'\",\n  medium: \"d MMM y 'г.'\",\n  short: 'dd.MM.y'\n};\nvar timeFormats = {\n  full: 'H:mm:ss zzzz',\n  long: 'H:mm:ss z',\n  medium: 'H:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  any: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'any'\n  })\n};\nexport default formatLong;","import { toDate } from \"../../../../index.js\";\nimport isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['нядзелю', 'панядзелак', 'аўторак', 'сераду', 'чацьвер', 'пятніцу', 'суботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у мінулую \" + weekday + \" а' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'у мінулы \" + weekday + \" а' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'у \" + weekday + \" а' p\";\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'у наступную \" + weekday + \" а' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'у наступны \" + weekday + \" а' p\";\n  }\n}\n\nvar lastWeekFormat = function lastWeekFormat(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nvar nextWeekFormat = function nextWeekFormat(dirtyDate, baseDate, options) {\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nvar formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'учора а' p\",\n  today: \"'сёньня а' p\",\n  tomorrow: \"'заўтра а' p\",\n  nextWeek: nextWeekFormat,\n  other: 'P'\n};\n\nvar formatRelative = function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['да н.э.', 'н.э.'],\n  abbreviated: ['да н. э.', 'н. э.'],\n  wide: ['да нашай эры', 'нашай эры']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-ы кв.', '2-і кв.', '3-і кв.', '4-ы кв.'],\n  wide: ['1-ы квартал', '2-і квартал', '3-і квартал', '4-ы квартал']\n};\nvar monthValues = {\n  narrow: ['С', 'Л', 'С', 'К', 'Т', 'Ч', 'Л', 'Ж', 'В', 'К', 'Л', 'С'],\n  abbreviated: ['студз.', 'лют.', 'сак.', 'крас.', 'трав.', 'чэрв.', 'ліп.', 'жн.', 'вер.', 'кастр.', 'ліст.', 'сьнеж.'],\n  wide: ['студзень', 'люты', 'сакавік', 'красавік', 'травень', 'чэрвень', 'ліпень', 'жнівень', 'верасень', 'кастрычнік', 'лістапад', 'сьнежань']\n};\nvar formattingMonthValues = {\n  narrow: ['С', 'Л', 'С', 'К', 'Т', 'Ч', 'Л', 'Ж', 'В', 'К', 'Л', 'С'],\n  abbreviated: ['студз.', 'лют.', 'сак.', 'крас.', 'трав.', 'чэрв.', 'ліп.', 'жн.', 'вер.', 'кастр.', 'ліст.', 'сьнеж.'],\n  wide: ['студзеня', 'лютага', 'сакавіка', 'красавіка', 'траўня', 'чэрвеня', 'ліпеня', 'жніўня', 'верасня', 'кастрычніка', 'лістапада', 'сьнежня']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'А', 'С', 'Ч', 'П', 'С'],\n  short: ['нд', 'пн', 'аў', 'ср', 'чц', 'пт', 'сб'],\n  abbreviated: ['нядз', 'пан', 'аўт', 'сер', 'чаць', 'пят', 'суб'],\n  wide: ['нядзеля', 'панядзелак', 'аўторак', 'серада', 'чацьвер', 'пятніца', 'субота']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'поўн.',\n    noon: 'поўд.',\n    morning: 'ран.',\n    afternoon: 'дзень',\n    evening: 'веч.',\n    night: 'ноч'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'поўн.',\n    noon: 'поўд.',\n    morning: 'ран.',\n    afternoon: 'дзень',\n    evening: 'веч.',\n    night: 'ноч'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'поўнач',\n    noon: 'поўдзень',\n    morning: 'раніца',\n    afternoon: 'дзень',\n    evening: 'вечар',\n    night: 'ноч'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'поўн.',\n    noon: 'поўд.',\n    morning: 'ран.',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночы'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'поўн.',\n    noon: 'поўд.',\n    morning: 'ран.',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночы'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'поўнач',\n    noon: 'поўдзень',\n    morning: 'раніцы',\n    afternoon: 'дня',\n    evening: 'вечара',\n    night: 'ночы'\n  }\n};\n\nvar ordinalNumber = function ordinalNumber(dirtyNumber, options) {\n  var unit = String(options === null || options === void 0 ? void 0 : options.unit);\n  var number = Number(dirtyNumber);\n  var suffix;\n  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)\n   *  For date-month combinations should be used `d` formatter.\n   *  Correct:   `d MMMM` (4 верасня)\n   *  Incorrect: `do MMMM` (4-га верасня)\n   *\n   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).\n   *  So for phrase \"5th day of month\" (`do дзень месяца`)\n   *  library will produce:            `5-га дзень месяца`\n   *  but correct spelling should be:  `5-ы дзень месяца`\n   *\n   *  So I guess there should be a stand-alone and a formatting version of \"day of month\" formatters\n   */\n\n  if (unit === 'date') {\n    suffix = '-га';\n  } else if (unit === 'hour' || unit === 'minute' || unit === 'second') {\n    suffix = '-я';\n  } else {\n    suffix = (number % 10 === 2 || number % 10 === 3) && number % 100 !== 12 && number % 100 !== 13 ? '-і' : '-ы';\n  }\n\n  return number + suffix;\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'any',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Belarusian Classic locale.\n * @language Belarusian Classic\n * @iso-639-2 bel\n * @author Ryhor Nopears [@nopears]{@link https://github.com/nopears}\n */\n\nvar locale = {\n  code: 'be-tarask',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1\n    /* Monday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((да )?н\\.?\\s?э\\.?)/i,\n  abbreviated: /^((да )?н\\.?\\s?э\\.?)/i,\n  wide: /^(да нашай эры|нашай эры|наша эра)/i\n};\nvar parseEraPatterns = {\n  any: [/^д/i, /^н/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[ыі]?)? кв.?/i,\n  wide: /^[1234](-?[ыі]?)? квартал/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[слкмчжв]/i,\n  abbreviated: /^(студз|лют|сак|крас|тр(ав)?|чэрв|ліп|жн|вер|кастр|ліст|сьнеж)\\.?/i,\n  wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|тра(вень|ўня)|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|сьнеж(ань|ня))/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^с/i, /^л/i, /^с/i, /^к/i, /^т/i, /^ч/i, /^л/i, /^ж/i, /^в/i, /^к/i, /^л/i, /^с/i],\n  any: [/^ст/i, /^лю/i, /^са/i, /^кр/i, /^тр/i, /^ч/i, /^ліп/i, /^ж/i, /^в/i, /^ка/i, /^ліс/i, /^сн/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[нпасч]/i,\n  short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\\.?/i,\n  abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцьв|чаць|птн|пят|суб).?/i,\n  wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацьв(ер|ярга)|пятніц[аы]|субот[аы])/i\n};\nvar parseDayPatterns = {\n  narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^([дп]п|поўн\\.?|поўд\\.?|ран\\.?|дзень|дня|веч\\.?|ночы?)/i,\n  abbreviated: /^([дп]п|поўн\\.?|поўд\\.?|ран\\.?|дзень|дня|веч\\.?|ночы?)/i,\n  wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^дп/i,\n    pm: /^пп/i,\n    midnight: /^поўн/i,\n    noon: /^поўд/i,\n    morning: /^р/i,\n    afternoon: /^д[зн]/i,\n    evening: /^в/i,\n    night: /^н/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;"],"names":["isSameUTCWeek","dirtyDateLeft","dirtyDateRight","options","requiredArgs","arguments","dateLeftStartOfWeek","startOfUTCWeek","dateRightStartOfWeek","getTime","declension","scheme","count","undefined","one","rem10","rem100","singularNominative","replace","String","singularGenitive","pluralGenitive","buildLocalizeTokenFn","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","any","accusativeWeekdays","thisWeek","day","formatRelativeLocale","lastWeek","dirtyDate","baseDate","toDate","getUTCDay","weekday","yesterday","today","tomorrow","nextWeek","other","format","ordinalNumber","dirtyNumber","unit","number","Number","era","buildLocalizeFn","values","narrow","abbreviated","wide","quarter","argumentCallback","month","formattingValues","defaultFormattingWidth","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","code","formatDistance","formatLong","formatRelative","localize","match","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","value","parseInt","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","index","weekStartsOn","firstWeekContainsDate"],"sourceRoot":""}